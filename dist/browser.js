function t(t,e,a,n){Object.defineProperty(t,e,{get:a,set:n,enumerable:!0,configurable:!0})}var e={};function a(){globalThis.assertEnabled=!0}function n(){globalThis.assertEnabled=!1}t(e,"enable",()=>a),t(e,"disable",()=>n),t(e,"assert",()=>r),t(e,"fails",()=>p),t(e,"Optional",()=>s),t(e,"Required",()=>o),t(e,"error",()=>m),t(e,"Recommended",()=>i),t(e,"oneOf",()=>l),t(e,"anyOf",()=>d),t(e,"validURL",()=>f),t(e,"validEmail",()=>u),t(e,"instanceOf",()=>c),t(e,"not",()=>h),globalThis.assertEnabled=!1;const r=(t,e)=>{if(globalThis.assertEnabled){let a=p(t,e);if(a)throw new b("Assertions failed",a,t)}},s=t=>e=>null!=e&&void 0!==e&&p(e,t),o=t=>e=>null==e||void 0===e?m("data is required"):p(e,t),i=t=>e=>null==e||void 0===e?(console.warning("data does not contain recommended value",e,t),!1):p(e,t),l=(...t)=>e=>{for(let a of t)if(!p(e,a))return!1;return m("data does not match oneOf patterns",e,t)},d=(...t)=>e=>{if(!Array.isArray(e))return m("data is not an array",e,"anyOf");for(let a of e)if(l(...t)(a))return m("data does not match anyOf patterns",a,t);return!1};function f(t){try{if(t instanceof URL&&(t=t.href),new URL(t).href!=t)return m("data is not a valid url",t,"validURL")}catch(e){return m("data is not a valid url",t,"validURL")}return!1}function u(t){return!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(t)&&m("data is not a valid email",t,"validEmail")}const c=t=>e=>!(e instanceof t)&&m("data is not an instanceof pattern",e,t),h=t=>e=>!p(e,t)&&m("data matches pattern, when required not to",e,t);function p(t,e,a){a||(a=t);let n=[];if(e===Boolean)"boolean"==typeof t||t instanceof Boolean||n.push(m("data is not a boolean",t,e));else if(e===Number)"number"==typeof t||t instanceof Number||n.push(m("data is not a number",t,e));else if(e===String)"string"==typeof t||t instanceof String||n.push(m("data is not a string",t,e)),""==t&&n.push(m("data is an empty string, which is not allowed",t,e));else if(e instanceof RegExp){if(Array.isArray(t)){let r=t.findIndex(t=>p(t,e,a));r>-1&&n.push(m("data["+r+"] does not match pattern",t[r],e))}else void 0===t?n.push(m("data is undefined, should match pattern",t,e)):e.test(t)||n.push(m("data does not match pattern",t,e))}else if(e instanceof Function)e(t,a)&&n.push(m("data does not match function",t,e));else if(Array.isArray(e))for(let r of(Array.isArray(t)||n.push(m("data is not an array",t,[])),e))for(let e of t){let t=p(e,r,a);Array.isArray(t)?n=n.concat(t):t&&n.push(t)}else if(e&&"object"==typeof e){if(Array.isArray(t)){let r=t.findIndex(t=>p(t,e,a));r>-1&&n.push(m("data["+r+"] does not match pattern",t[r],e))}else if(t&&"object"==typeof t)for(let[r,s]of(t instanceof URLSearchParams&&(t=Object.fromEntries(t)),Object.entries(e))){let e=p(t[r],s,a);e&&(n=n.concat(e))}else n.push(m("data is not an object, pattern is",t,e))}else e!=t&&n.push(m("data and pattern are not equal",t,e));return!!n.length&&n}class b extends Error{constructor(t,e,...a){super(t),this.problems=e,this.details=a}}function m(t,e,a){return{message:t,found:e,expected:a}}globalThis.assert=e;
//# sourceMappingURL=browser.js.map
