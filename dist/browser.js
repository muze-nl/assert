function e(e,t,a,n){Object.defineProperty(e,t,{get:a,set:n,enumerable:!0,configurable:!0})}var t={};function a(){globalThis.assertEnabled=!0}function n(){globalThis.assertEnabled=!1}e(t,"enable",()=>a),e(t,"disable",()=>n),e(t,"assert",()=>r),e(t,"fails",()=>b),e(t,"Optional",()=>s),e(t,"Required",()=>o),e(t,"Recommended",()=>i),e(t,"oneOf",()=>l),e(t,"error",()=>m),e(t,"anyOf",()=>f),e(t,"validURL",()=>d),e(t,"validEmail",()=>u),e(t,"instanceOf",()=>c),e(t,"not",()=>h),globalThis.assertEnabled=!1;const r=(e,t)=>{if(globalThis.assertEnabled){let a=b(e,t);if(a)throw new y("Assertions failed",a,e)}},s=e=>t=>null!=t&&void 0!==t&&b(t,e),o=e=>t=>b(t,e),i=e=>t=>null==t||void 0===t?(console.warning("data does not contain recommended value",t,e),!1):b(t,e),l=(...e)=>t=>{for(let a of e)if(!b(t,a))return!1;return m("data does not match oneOf patterns",t,e)},f=(...e)=>t=>{if(!Array.isArray(t))return m("data is not an array",t,"anyOf");for(let a of t)if(l(...e)(a))return m("data does not match anyOf patterns",a,e);return!1};function d(e){try{if(e instanceof URL&&(e=e.href),new URL(e).href!=e)return m("data is not a valid url",e,"validURL")}catch(t){return m("data is not a valid url",e,"validURL")}return!1}function u(e){return!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(e)&&m("data is not a valid email",e,"validEmail")}const c=e=>t=>!(t instanceof e)&&m("data is not an instanceof pattern",t,e),h=e=>t=>!b(t,e)&&m("data matches pattern, when required not to",t,e);function b(e,t,a){a||(a=e);let n=[];if(t===Boolean)"boolean"!=typeof e&&n.push(m("data is not a boolean",e,t));else if(t===Number)"number"!=typeof e&&n.push(m("data is not a number",e,t));else if(t instanceof RegExp){if(Array.isArray(e)){let r=e.findIndex(e=>b(e,t,a));r>-1&&n.push(m("data["+r+"] does not match pattern",e[r],t))}else t.test(e)||n.push(m("data does not match pattern",e,t))}else if(t instanceof Function)t(e,a)&&n.push(m("data does not match function",e,t));else if(Array.isArray(t))for(p of(Array.isArray(e)||n.push(m("data is not an array",e,[])),t)){let t=b(e,p,a);Array.isArray(t)?n.concat(t):t&&n.push(t)}else if(t&&"object"==typeof t){if(Array.isArray(e)){let r=e.findIndex(e=>b(e,t,a));r>-1&&n.push(m("data["+r+"] does not match pattern",e[r],t))}else if(e&&"object"==typeof e){e instanceof URLSearchParams&&(e=Object.fromEntries(e));let r=n[n.length-1];for(let[s,o]of Object.entries(t)){let t=b(e[s],o,a);t&&(r&&"string"!=typeof r||(r={},n.push(m(r,e[s],o))),r[s]=t.problems)}}else n.push(m("data is not an object, pattern is",e,t))}else t!=e&&n.push(m("data and pattern are not equal",e,t));return!!n.length&&n}class y extends Error{constructor(e,t,...a){super(e),this.problems=t,this.details=a}}function m(e,t,a){return{message:e,found:t,expected:a}}globalThis.assert=t;
//# sourceMappingURL=browser.js.map
